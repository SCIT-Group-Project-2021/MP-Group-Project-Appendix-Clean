
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$MP-Project-primary: mat.define-palette(mat.$teal-palette);
$MP-Project-accent: mat.define-palette(mat.$grey-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$MP-Project-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$MP-Project-theme: mat.define-light-theme((
  color: (
    primary: $MP-Project-primary,
    accent: $MP-Project-accent,
    warn: $MP-Project-warn,
  ),
  typography: mat.define-typography-config(),
  density: 0
));


// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($MP-Project-theme);

@import "../node_modules/angular-calendar/css/angular-calendar.css";

@font-face {
  font-family: 'rubik';
  src: url('./assets/fonts/Rubik/Rubik-Regular.ttf');
}

/* You can add global styles to this file, and also import other style files */
body {
    background-color: #F4F7FE;
}
body { 
  margin: 0; 
  font-family: rubik; 
  color: #172156
}


